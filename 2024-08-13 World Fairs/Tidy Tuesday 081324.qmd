---
title: "Tidy Tuesday"
subtitle: "Week 33"
author: "Cristian T"
date: last-modified
format: 
   html:
     df-print: paged
     embed-resources: true
editor: 
  markdown: 
    wrap: 72
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```


```{r}
# Load the tidytuesday package
suppressMessages(library(tidytuesdayR))
suppressMessages(library(skimr))
suppressMessages(library(tidyverse))


# Load the current week's dataset
tuesdata <- tidytuesdayR::tt_load('2024-08-13')

worlds_fairs <- tuesdata$worlds_fairs

# Explore the structure of the dataset
str(worlds_fairs)
skim(worlds_fairs)


# View the first few rows of the dataset
head(worlds_fairs)


#tidytuesdayR::use_tidytemplate()
```

#### Missing Values
Notables: 11 missing values (about 15.7% of the rows).
Visitors: 14 missing values (about 20% of the rows).
Cost: 34 missing values (about 48.6% of the rows).
Area: 5 missing values (about 7.1% of the rows).
Attending Countries: 5 missing values (about 7.1% of the rows).
Most of the cost fetched from https://jdpecon.com/expo/expolist.html

# Clean the data
```{r}
# add missing values
worlds_fairs[70, "cost"] <- 7000
worlds_fairs[69, "cost"] <- 2100 
worlds_fairs[68, "cost"] <- 14430 # Using the 2015 average exchange rate, â‚¬13 billion in 2015 would be approximately $14.43 billion USD
worlds_fairs[67, "cost"] <- 2000
worlds_fairs[65, "cost"] <- 1070
worlds_fairs[64, "cost"] <- 3500
worlds_fairs[62, "cost"] <- 2000
worlds_fairs[61, "cost"] <- 3500 # South Korea 93
worlds_fairs[60, "cost"] <- 569 # Expo Colombo '92 $487.5 to $650 million according to the New York Times - We will use median 568.75 rounded
worlds_fairs[59, "cost"] <- 9300 # Expo Spain '92
worlds_fairs[54, "cost"] <- 764 # Expo Expo 85 (Tsukuba, Japan)
worlds_fairs[50, "cost"] <- 304 # Expo Japan 75
worlds_fairs[32, "cost"] <- 4 # Expo Port-au-Prince 1949
worlds_fairs[12, "cost"] <- 1 # Brussels International Exposition 1897


# Corrections
worlds_fairs[1, "cost"] <- 1.65 # 1851 London
worlds_fairs[2, "cost"] <- 6 # 1855 France
worlds_fairs[10, "cost"] <- 8 # France 1889 41.5 million French francs would be approximately 8.01 million USD
worlds_fairs[6, "cost"] <- 9 # 1876 Philadelphia
worlds_fairs[21, "cost"] <- 25 # fix
worlds_fairs[13, "cost"] <- 18.75 # 1900 Paris
worlds_fairs[23, "cost"] <- 22.4 # 1935 Brussels
worlds_fairs[25, "cost"] <- 57.25 # 1937 Paris
worlds_fairs[41, "cost"] <- 43.4 # 1958 Brussels
worlds_fairs[45, "cost"] <- 384.7 # 1967 Canada 415.920 CAD million would be approximately 384.7 million USD
worlds_fairs[47, "cost"] <- 3420 # Expo '70 According to the New York Times, the total spent on expo related projects plus expo was $3 billion spent with $420 million spent on preparation of site and construction of pavilions
worlds_fairs[56, "cost"] <- 590 # Expo '86 Canada
worlds_fairs[57, "cost"] <- 743 # Expo '88 Brisbane
worlds_fairs[63, "cost"] <- 2238 # Expo '2000 Hanover
worlds_fairs[66, "cost"] <- 8800 # Expo '2010 Shanghai
worlds_fairs[26, "visitors"] <- 15 # 1938 Helsinki London
worlds_fairs[26, "area"] <- 15.2 # 1938 Helsinki London
worlds_fairs[32, "visitors"] <- 0.07 # Expo Port-au-Prince 1949
worlds_fairs[35, "visitors"] <- 0.6 # Expo 1953 Jerusalem
worlds_fairs[37, "visitors"] <- 0.12 # Expo 1955 Turin
worlds_fairs[38, "area"] <- 4.45 # Expo 1955 Turin
worlds_fairs[14, "cost"] <- 26.5 # St Louis 1904
worlds_fairs[15, "cost"] <- 2.9 # Belgium 1905
worlds_fairs[16, "cost"] <- 2.6 # Milan 1906
worlds_fairs[17, "cost"] <- 3.5 
worlds_fairs[19, "cost"] <- 3.3 
worlds_fairs[20, "cost"] <- 22.2
worlds_fairs[22, "cost"] <- 31
worlds_fairs[27, "cost"] <- 160
worlds_fairs[43, "cost"] <- 47
worlds_fairs[49, "cost"] <- 78.4
worlds_fairs[5, "cost"] <- 12 # Vienna 1873
worlds_fairs[4, "cost"] <- 4.5 # Paris 1867
worlds_fairs[8, "cost"] <- 1.6 # Melbourne 1880
worlds_fairs[9, "cost"] <- 1.7 # Spain 1881


# we still have 21 null values for cost
# visitors	10
# area	4 and attending_countries	5	
```

To address the missing values we will attempt to use an advanced imputation method to help fill in the remaining missing values using a more sophisticated technique than the median. Using the mice package (https://amices.org/mice/), we will consider the relationships between variables to fill in the missing data.

Instead of using KNN we decided to try PMM (Predictive Mean Matching). This matches each missing value with the nearest observed values and imputes from those values. Effective for maintaining the distribution of the data. PMM does multiple imputations by default when you set m > 1, creating multiple versions of the dataset with imputed values, reflecting the uncertainty of the missing data.
```{r}

suppressMessages(library(mice))

#  Show the missing data pattern
md.pattern(worlds_fairs) # Blue is observed, red is missing

imputed_data <- mice(worlds_fairs, method = 'pmm', m = 5, maxit = 50)
#imputed_data <- mice(worlds_fairs, method = 'pmm', m = 5, maxit = 50, seed = 1842)
# we are using the Predictive Mean Matching method and we generated 5 different versions of the dataset, each with slightly different imputed values and 50 iterations with random seed 1842

# Inspect the imputed data.
#summary(imputed_data)

# Visual summary of the imputation process
stripplot(imputed_data)
# helps you understand how the imputed values compare to the observed data and whether the imputation seems reasonable.

# Extract the Dataset
worlds_fairs_imputed <- complete(imputed_data)

# Compare Before and After
summary(worlds_fairs$cost)
summary(worlds_fairs_imputed$cost)

skim(worlds_fairs_imputed)
skim(worlds_fairs)
```


```{r}
library(ggplot2)

ggplot(worlds_fairs_imputed, aes(x = start_year, y = visitors)) +
  geom_line() +
  labs(title = "Visitor Trends Over Time",
       x = "Year",
       y = "Visitors (in millions)") +
  theme_minimal()


```

```{r}
ggplot(worlds_fairs_imputed, aes(x = cost, y = visitors)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Cost vs. Visitors",
       x = "Cost (in millions)",
       y = "Visitors (in millions)") +
  theme_minimal()

cost_visitors_df <- worlds_fairs_imputed[, c("cost", "visitors")]

cost_visitors_df

```

```{r}
# Rename counties to 
worlds_fairs_imputed <- worlds_fairs_imputed %>%
  mutate(country = recode(country, "Colony of Victoria" = "Australia", "West Germany" = "Germany", "People's Republic of China" = "China",  "Austria-Hungary" = "Austria"))


ggplot(worlds_fairs_imputed %>%
         count(country) %>%
         arrange(n), 
       aes(x = reorder(country, n), y = n, fill = country)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(title = "Number of Expositions by Country",
       x = "Country",
       y = "Number of Expositions") +
  theme_minimal() +
  theme(legend.position = "none")

```

```{r}
worlds_fairs_imputed %>%
  group_by(start_year) %>%
  summarise(avg_cost = mean(cost, na.rm = TRUE)) %>%
  ggplot(aes(x = start_year, y = avg_cost)) +
  geom_line() +
  geom_point() +
  labs(title = "Average Cost of World Expositions Over Time",
       x = "Year",
       y = "Average Cost (in millions)") +
  theme_minimal()

```








```{r}
#sessioninfo::session_info(include_base = TRUE)
```

